#version 300 es
precision mediump float;
precision highp int;

in highp vec3 wnormal;
in highp vec3 bposition;
out highp vec4 fragColor[2];

highp vec3 tex_checker(highp vec3 co, highp vec3 col1, highp vec3 col2, highp float scale)
{
    highp vec3 p = (co + vec3(9.9999897429370321333408355712891e-07)) * scale;
    highp float xi = abs(floor(p.x));
    highp float yi = abs(floor(p.y));
    highp float zi = abs(floor(p.z));
    bool check = (mod(xi, 2.0) == mod(yi, 2.0)) == (mod(zi, 2.0) != 0.0);
    bvec3 _104 = bvec3(check);
    return vec3(_104.x ? col1.x : col2.x, _104.y ? col1.y : col2.y, _104.z ? col1.z : col2.z);
}

highp vec2 octahedronWrap(highp vec2 v)
{
    return (vec2(1.0) - abs(v.yx)) * vec2((v.x >= 0.0) ? 1.0 : (-1.0), (v.y >= 0.0) ? 1.0 : (-1.0));
}

highp float packFloatInt16(highp float f, uint i)
{
    return (0.06248569488525390625 * f) + (0.06250095367431640625 * float(i));
}

highp float packFloat2(highp float f1, highp float f2)
{
    return floor(f1 * 255.0) + min(f2, 0.9900000095367431640625);
}

void main()
{
    highp vec3 n = normalize(wnormal);
    highp vec3 CheckerTexture_Color_res = tex_checker(bposition, vec3(0.800000011920928955078125), vec3(0.20000000298023223876953125), 32.0);
    highp vec3 CheckerTexture_001_Color_res = tex_checker(bposition, vec3(0.800000011920928955078125), vec3(0.0), 32.0);
    highp vec3 basecol = CheckerTexture_Color_res;
    highp float roughness = dot(CheckerTexture_001_Color_res, vec3(0.2125999927520751953125, 0.715200006961822509765625, 0.072200000286102294921875));
    highp float metallic = 0.0;
    highp float occlusion = 1.0;
    highp float specular = 1.0;
    n /= vec3((abs(n.x) + abs(n.y)) + abs(n.z));
    highp vec2 _156;
    if (n.z >= 0.0)
    {
        _156 = n.xy;
    }
    else
    {
        _156 = octahedronWrap(n.xy);
    }
    n = vec3(_156.x, _156.y, n.z);
    fragColor[0] = vec4(n.xy, roughness, packFloatInt16(metallic, 0u));
    fragColor[1] = vec4(basecol, packFloat2(occlusion, specular));
}

